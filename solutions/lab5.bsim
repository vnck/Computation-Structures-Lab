.include beta.uasm
.include lab5checkoff.uasm	

count_bull_cows:
	PUSH(LP)
	PUSH(BP)
	MOVE(SP,BP)
	
	PUSH(R1)		| bulls
	PUSH(R2)		| cows
	PUSH(R3)		| i
	PUSH(R4)		| j
	PUSH(R5)		| btemp
	PUSH(R6)		| atry
	PUSH(R7)		| btry
	PUSH(R8)		| mask
	PUSH(R9)		| a
	PUSH(R10)		| b
	PUSH(R11)		| temp values
	PUSH(R12)		| temp values
	
	LD(BP,-12,R9)		| load a value
	LD(BP,-16,R10)		| load b value

	CMOVE(0,R1)		| bulls = 0
	CMOVE(0xF,R8)		| mask = 0xF

	CMOVE(0,R3)		| i = 0
	BR(EndForBull)		| i for loop

ForBull:
	AND(R9,R8,R12)		| R12 = (a & mask)
	AND(R10,R8,R11)		| R11 = (b & mask)
	CMPEQ(R12,R11,R12)	| 
	BEQ(R12,IfBull)		| if R12 == 0, Br IfBull

	ADDC(R1,1,R1)		| bulls+=1
	OR(R9,R8,R9)		| a = (a | mask)
	OR(R10,R8,R10)		| b = (b | mask)

IfBull:
	SHLC(R8,4,R8)		| mask = mask << 4
	ADDC(R3,1,R3)		| i++

EndForBull:
	CMPLTC(R3,4,R11)
	BNE(R11,ForBull)

	CMOVE(0,R2)		| cows = 0
	CMOVE(0,R3)		| i = 0
	BR(EndForCow1)

	
ForCow1:
	ANDC(R9,0xF,R6)		| atry = a & 0xF
	SHRC(R9,4,R9)		| a = a >> 4
	CMPEQC(R6,0xF,R11)
	BNE(R11,IfCow1)		| if (atry != 0xF)
	
	MOVE(R10,R5)		| btemp = b
	CMOVE(0xF,R8)		| mask = 0xF

	CMOVE(0,R4)		| j = 0
	BR(EndForCow2)

ForCow2:
	ANDC(R5,0xF,R7)		| btry = (btemp & 0xF)
	SHRC(R5,4,R5)		| btemp = btemp >> 4

	CMPEQ(R7,R6,R12)
	BEQ(R12,IfCow2)		| if (btry == atry)

	ADDC(R2,1,R2)		| cows++
	OR(R10,R8,R10)		| b = (b | mask)
	BR(IfCow1)

IfCow2:
	SHLC(R8,4,R8)		| mask = mask << 4
	ADDC(R4,1,R4)		| j++

EndForCow2:
	CMPLTC(R4,4,R11)
	BNE(R11,ForCow2)

IfCow1:
	ADDC(R3,1,R3)		| i++

EndForCow1:
	CMPLTC(R3,4,R11)
	BNE(R11,ForCow1)

	SHLC(R1,4,R0)		| (bulls << 4)
	ADD(R0, R2, R0)		| Return (bulls << 4) + cows

	POP(R12)
	POP(R11)
	POP(R10)
	POP(R9)
	POP(R8)
	POP(R7)
	POP(R6)
	POP(R5)
	POP(R4)
	POP(R3)
	POP(R2)
	POP(R1)

	MOVE(BP,SP)
	POP(BP)
	POP(LP)
	RTN()


StackBase: LONG(.+4)
	. = .+0x1000

